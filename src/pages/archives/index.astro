---
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
type Post = {
  data: {
    title: string;
    date: string;
  };
  slug: string;
};
const getPosts = await getCollection("posts");
const list = getPosts.reduce((acc: any, post) => {
  const year = new Date(post.data.date).getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});
// 对每个年份的文章按照日期排序
const tree = Object.entries(list)
  .map(([year, posts]: [string, any]) => {
    return [
      year,
      posts.sort(
        (a: Post, b: Post) =>
          new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
      ),
    ];
  })
  .reverse();
---

<BaseLayout>
  <div class="sc-ly" flex="~ col gap-6">
    {
      tree.map(([year, posts]) => (
        <div class="mb-4">
          <div class="mb-2 text-0.9rem" flex="~ items-center gap-4">
            <h3>{year}</h3>
            <span>共 {posts.length} 篇文章</span>
          </div>
          {posts.map((post: Post) => (
            <div class="mb-2 ml-4" flex="~ items-center gap-4">
              <span w-16 mr-2>
                {post.data.date.slice(5)}
              </span>
              <a
                sc-ts
                hover="decoration-underline"
                href={`/posts/${post.slug}/`}
              >
                {post.data.title}
              </a>
            </div>
          ))}
        </div>
      ))
    }
  </div>
</BaseLayout>
